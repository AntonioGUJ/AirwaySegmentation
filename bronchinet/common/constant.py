
import numpy as np
np.random.seed(2017)

DATADIR = '/home/antonio/Data/MRIenhance_GRASE2CUBE_Processed/'
#DATADIR = '/data/scratch/agarcia/Data/MRIenhance/'         #cluster
BASEDIR = '/home/antonio/Results/MRIenhanceTests/'
#BASEDIR = '/data/scratch/agarcia/Results/MRIenhanceTests/' #cluster


# NAMES INPUT / OUTPUT DIR
NAME_RAW_IMAGES_RELPATH         = 'Images/'
NAME_RAW_LABELS_RELPATH         = 'Labels/'
NAME_RAW_ROIMASKS_RELPATH       = 'RoiMasks/'
NAME_RAW_EXTRAIMAGES_RELPATH    = 'NOUSE/'
NAME_RAW_EXTRALABELS_RELPATH    = 'NOUSE/'
NAME_REFERENCE_FILES_RELPATH    = 'Images/'
NAME_PROC_IMAGES_RELPATH        = 'ImagesWorkData/'
NAME_PROC_LABELS_RELPATH        = 'LabelsWorkData/'
NAME_PROC_EXTRALABELS_RELPATH   = 'ExtraLabelsWorkData/'
NAME_CROP_BOUNDINGBOX_FILE      = 'cropBoundingBoxes_images.npy'
NAME_REFERENCE_KEYS_PROCIMAGE_FILE = 'referenceKeys_procimages.npy'
NAME_TRAININGDATA_RELPATH       = 'TrainingData/'
NAME_VALIDATIONDATA_RELPATH     = 'ValidationData/'
NAME_TESTINGDATA_RELPATH        = 'TestingData/'
NAME_CONFIG_PARAMS_FILE         = 'configparams.txt'
NAME_DESCRIPT_MODEL_LOGFILE     = 'descriptmodel.txt'
NAME_TRAINDATA_LOGFILE          = 'traindatafiles.txt'
NAME_VALIDDATA_LOGFILE          = 'validdatafiles.txt'
NAME_LOSSHISTORY_FILE           = 'losshistory.csv'
NAME_SAVEDMODEL_EPOCH_KERAS     = 'model_e%0.2d.hdf5'
NAME_SAVEDMODEL_LAST_KERAS      = 'model_last.hdf5'
NAME_SAVEDMODEL_EPOCH_TORCH     = 'model_e%0.2d.pt'
NAME_SAVEDMODEL_LAST_TORCH      = 'model_last.pt'
NAME_TEMPO_POSTERIORS_RELPATH   = 'Predictions/PosteriorsWorkData/'
NAME_POSTERIORS_RELPATH         = 'Predictions/Posteriors/'
NAME_REFERENCE_KEYS_POSTERIORS_FILE = 'Predictions/referenceKeys_posteriors.npy'
NAME_PRED_RESULT_METRICS_FILE   = 'Predictions/result_metrics.csv'


# PREPROCESSING
IS_BINARY_TRAIN_MASKS           = False
IS_MASK_REGION_INTEREST         = False
IS_NORMALIZE_DATA               = False
IS_CROP_IMAGES                  = False
SIZE_BUFFER_BOUNDBOX_BORDERS    = None
IS_SAME_SIZE_BOUNDBOX_ALL_IMAGES= False
IS_CALC_BOUNDINGBOX_IN_SLICES   = False
FIXED_SIZE_BOUNDING_BOX         = None
IS_MERGE_TWO_IMAGES_AS_CHANNELS = False
IS_SHUFFLE_TRAINDATA            = True


# DATA AUGMENTATION IN TRAINING
USE_SLIDING_WINDOW_IMAGES       = False
PROP_OVERLAP_SLIDING_WINDOW     = (0.5, 0.5, 0.5)
USE_RANDOM_WINDOW_IMAGES        = False
NUM_RANDOM_PATCHES_EPOCH        = 8
USE_TRANSFORM_RIGID_IMAGES      = True
USE_TRANSFORM_ELASTICDEFORM_IMAGES = False
TRANS_ROTATION_XY_RANGE         = 0
TRANS_ROTATION_XZ_RANGE         = 0
TRANS_ROTATION_YZ_RANGE         = 0
TRANS_HEIGHT_SHIFT_RANGE        = 0
TRANS_WIDTH_SHIFT_RANGE         = 0
TRANS_DEPTH_SHIFT_RANGE         = 0
TRANS_HORIZONTAL_FLIP           = True
TRANS_VERTICAL_FLIP             = True
TRANS_AXIALDIR_FLIP             = True
TRANS_ZOOM_RANGE                = 0
TRANS_FILL_MODE_TRANSFORM       = 'nearest'
TYPE_TRANSFORM_ELASTICDEFORM_IMAGES = 'gridwise'


# DISTRIBUTE DATA TRAIN / VALID / TEST
DIST_PROPDATA_TRAINVALIDTEST    = (0.65, 0.15, 0.20)


# TRAINING MODELS
TYPE_DNNLIB_USED            = 'Keras'
IS_MODEL_IN_GPU             = True
IS_MODEL_HALF_PRECISION     = False
USE_MULTITHREADING          = False
SIZE_IN_IMAGES              = (288, 288, 96)
MAX_TRAIN_IMAGES            = 500           # WATCH OUT IS LARGER THAN THE NUM. IMAGES YOU WANT TO LOAD
MAX_VALID_IMAGES            = 200
BATCH_SIZE                  = 1
NUM_EPOCHS                  = 500
TYPE_NETWORK                = 'UNet3D_3levels'  # 'UNet3D_5levels'
NET_NUM_LEVELS              = 3             # NO USE, CHANGE IN UNET IMPLEMENTATION IN 'MODELS/KERAS/NETWORKS.PY'
NET_NUM_FEATMAPS            = 16
TYPE_ACTIVATE_HIDDEN        = 'relu'        # NO USE, CHANGE IN UNET IMPLEMENTATION IN 'MODELS/KERAS/NETWORKS.PY'
TYPE_ACTIVATE_OUTPUT        = 'linear'      # NO USE, CHANGE IN UNET IMPLEMENTATION IN 'MODELS/KERAS/NETWORKS.PY'
IS_DISABLE_CONVOL_POOLING_LASTLAYER = False # NO USE
NET_USE_DROPOUT             = False         # NO USE, CHANGE IN UNET IMPLEMENTATION IN 'MODELS/KERAS/NETWORKS.PY'
NET_USE_BATCHNORMALIZE      = False         # NO USE, CHANGE IN UNET IMPLEMENTATION IN 'MODELS/KERAS/NETWORKS.PY'
TYPE_OPTIMIZER              = 'Adam'
LEARN_RATE                  = 1.0e-04
TYPE_LOSS                   = 'DSSIM'       #'Perceptual' #'MultiScaleSSIM'
WEIGHT_COMBINED_LOSS        = 1000.0
LAYERS_VGG16_LOSS_PERCEPTUAL= ['block1_conv1', 'block2_conv1', 'block3_conv1']
WEIGHTS_VGG16_LOSS_PERCEPTUAL= [0.65, 0.30, 0.05]
PROP_REDUCE_INSIZE_VGG16_LOSS_PERCEPTUAL = 0.33
LIST_TYPE_METRICS           = ['DSSIM']
MANUAL_SEED_TRAIN           = None
IS_VALID_CONVOLUTIONS       = False
USE_VALIDATION_DATA         = True
FREQ_VALIDATE_MODEL         = 1
FREQ_SAVE_INTER_MODELS      = 10
USE_TRANSFORM_VALIDATION_DATA = True
WRITE_OUT_DESC_MODEL_TEXT   = False
IS_RESTART_MODEL            = False
IS_RESTART_ONLY_WEIGHTS     = False


# PREDICTIONS / POST-PROCESSING PARAMETERS
PROP_OVERLAP_SLIDING_WINDOW_TESTING = (0.5, 0.5, 0.5)
IS_FILTER_PRED_PROBMAPS     = False
PROP_VALID_OUTPUT_NNET      = 0.75
LIST_TYPE_METRICS_RESULT    = ['SNR', 'PSNR', 'SSIM']
IS_SAVE_FEATMAPS_LAYERS     = False
NAME_SAVE_FEATS_MODEL_LAYER = 'convU12'